#!/usr/bin/env python

import sys, argparse
from subprocess import call


""" Function to get integer input as string """
def get_num_string(msg):
	output = input(msg)
	while (not output.isnumeric()):
		print('Not a valid number')
		output = input(msg)
	return output

""" Function to handle file name """
def input_file():
    name = input('Type the name of the video file:\n')
    try:
    	_ = open(name)
    	_.close()
    except IOError:
    	print("File does not exist. Try again.")
    	input_file()
        #sys.exit()
    return name

""" Parsing Arguments """
parser = argparse.ArgumentParser(description='Convert a video file to gif \
        format')
parser.add_argument('-i', '--input', type=str, help='Input video file')
parser.add_argument('-o', '--output', type=str, help='Output gif file')
parser.add_argument('-s', '--start', type=str, help='Start second')
parser.add_argument('-d', '--duration', type=str, help='Duration of gif from \
        defined start')
parser.add_argument('-w', '--width', type=str, help='Width of output gif')
args = parser.parse_args()


""" Initializing variables """
file_name=''; output=''; start=''; duration=''; width='';
if(args.input):
    file_name = args.input
else:
    file_name = input_file()
if(args.output):
    output = args.output
else:
    output = input('Type the name of the output file:\n')
if (not output.endswith('.gif')):
	output = output + '_.gif'
if(args.start):
    start = args.start
else:
    start = get_num_string('Type the initial time:\n')
if(args.duration):
    duration = args.duration
else:
    duration = get_num_string('Type the duration from the initial time:\n')
if(args.width):
    width = args.width
else:
    width = get_num_string('Type the width of the output:\n')


""" Creating a palette for gif use """
call(['ffmpeg', '-y', '-ss', start, '-t', duration, '-i', file_name, \
	'-vf', 'fps=10,scale='+width+':-1:flags=lanczos,palettegen', 'palette.png'])
""" Creating the gif """
call(['ffmpeg', '-ss', start, '-t', duration, '-i', file_name, '-i', \
        'palette.png', '-filter_complex','fps=10,scale='+width+\
        ':-1:flags=lanczos[x];[x][1:v]paletteuse', output])


